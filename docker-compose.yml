version: '3.8'

services:
  luckseeker-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: luckseeker-line-bot
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # LINE Configuration
      - LINE_CHANNEL_SECRET=${LINE_CHANNEL_SECRET}
      - LINE_CHANNEL_ACCESS_TOKEN=${LINE_CHANNEL_ACCESS_TOKEN}
      - LINE_LIFF_ID=${LINE_LIFF_ID}
      # AI Service Configuration
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Application Configuration
      - WEBHOOK_URL=${WEBHOOK_URL}
    env_file:
      - .env
    volumes:
      # Mount logs directory (optional)
      - ./logs:/app/logs
    networks:
      - luckseeker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for caching user data
  redis:
    image: redis:7-alpine
    container_name: luckseeker-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - luckseeker-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: luckseeker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - luckseeker-app
    networks:
      - luckseeker-network

networks:
  luckseeker-network:
    driver: bridge

volumes:
  redis-data:
    driver: local